from __future__ import division
import numpy as np
import fssa
import matplotlib.pyplot as plt

L = np.array([5, 7, 10])

#K = np.array([0.2,0.2017241379310345,0.20344827586206898,0.20517241379310347,0.20689655172413793,0.20862068965517241,0.2103448275862069,0.2120689655172414,0.21379310344827587,0.21551724137931036,0.21724137931034485,0.2189655172413793,0.2206896551724138,0.22241379310344828,0.22413793103448276,0.22586206896551725,0.22758620689655173,0.22931034482758622,0.2310344827586207,0.23275862068965517,0.23448275862068965,0.23620689655172414,0.23793103448275862,0.2396551724137931,0.24137931034482757,0.24310344827586206,0.24482758620689654,0.24655172413793103,0.2482758620689655,0.25])

K = np.array([0.7,0.7034482758620689,0.7068965517241379,0.7103448275862069,0.7137931034482758,0.7172413793103448,0.7206896551724138,0.7241379310344828,0.7275862068965517,0.7310344827586207,0.7344827586206897,0.7379310344827587,0.7413793103448276,0.7448275862068966,0.7482758620689656,0.7517241379310344,0.7551724137931034,0.7586206896551724,0.7620689655172413,0.7655172413793103,0.7689655172413793,0.7724137931034483,0.7758620689655172,0.7793103448275862,0.7827586206896552,0.7862068965517242,0.7896551724137931,0.7931034482758621,0.7965517241379311,0.8])

T = [1/k for k in K]

"""
# k = 5, b = 1
# L=5 ... 10 x 30000
C_5 = np.array([0.5687711339899495,0.5971078325888036,0.6265099122639863,0.6711391821920917,0.7021595405064578,0.7474950505070053,0.8088935464763333,0.8401991712784943,0.9026777853168281,0.9615755358255231,1.0085249428959528,1.0558637675171973,1.1297730733710727,1.1822188037571375,1.2386995786541055,1.2900708013079123,1.3191518195358425,1.3523492341482037,1.3799679537026468,1.4066423347790924,1.424196792179978,1.4270332532628156,1.4145560099895995,1.4393687488947575,1.413842246229124,1.4045642450931248,1.3717153037820273,1.356683031717685,1.309632203557934,1.3021857105508161])
C_5_s = np.array([0.005445338037245514,0.0058534212036671016,0.005988818261068812,0.006231012274511903,0.006548224449232509,0.006676650587633832,0.0070486597296382895,0.007138206889177299,0.007533916487745287,0.007889264759185366,0.007906262574560377,0.008115345768923189,0.008479015525313365,0.008669687407047892,0.008918366129916578,0.009014190043126938,0.00914704220886186,0.009265511667771594,0.00948001559681744,0.009652305454065951,0.009944788699901851,0.00998621004683772,0.010139842517940909,0.010407795820736646,0.010593907506617909,0.01069097534438121,0.010521510327134501,0.010678431879483195,0.010611425048141972,0.010585245606702319])

# L=7 ... 30 x 10000
C_7 = np.array([0.4486183610826034,0.4769628676171651,0.52633937292467,0.5511046955596479,0.5995152141762282,0.6608679153523799,0.7316944381165582,0.7755005280632339,0.8747580255495438,0.9627115226775476,1.0651775616304902,1.201598179383464,1.3113524675411377,1.3825093320395827,1.4938081455866685,1.5527615965292467,1.6516260886653567,1.6989535572471093,1.6825007545742614,1.7393609773106793,1.6638105164936532,1.6737929313189477,1.629034315696833,1.577926212481657,1.491014183530933,1.439578509699884,1.3814513860309616,1.3554238418748408,1.283842711667918,1.2558632384884525])
C_7_s = np.array([0.007533238537827962,0.007927834697193542,0.009081767410687322,0.009113232455013618,0.009968843337412865,0.01085466422029585,0.012093835191538718,0.012461756757793915,0.013626969191051119,0.014482709733299123,0.015800712210631042,0.016752551087634602,0.01789832301800467,0.01773937107663846,0.018745610769346693,0.019514601236936657,0.020570905713616517,0.021146098893071393,0.021271137037268687,0.023042216376425433,0.02267455200847131,0.02288455516021578,0.022549823084170185,0.022523652490290275,0.02165715821001544,0.02090237768792746,0.020239309785363268,0.020249124790851645,0.0184711886339827,
0.01816571449078357])

# L=10 ... 50 x 6000
C_10 = np.array([0.394668916815582,0.40188856032792986,0.4385872046514994,0.4438576880781126,0.4957143070388336,0.49441435832508507,0.5849115186117303,0.6397774288125707,0.7532650307608935,0.8717714702714073,1.0337703331171049,1.2069521716701836,1.4472628977700939,1.7167775835917158,1.814364762669667,2.016246442731996,2.0552685555246373,1.9515358847401445,1.9382057258142376,1.814187014723113,1.6924360744998503,1.6143340707646556,1.5415048166648058,1.459757457146939,1.4707214500225818,1.4154009575846078,1.366124398712165,1.3289447285501392,1.278168307325393,1.2319935081001117])
C_10_s = np.array([0.007620692614120471,0.0077758911349990415,0.008824696809712283,0.008700107225353146,0.010197145388889507,0.010355359362073562,0.012694276412371225,0.013371329527638675,0.015735581632444217,0.018143765390429768,0.020595493593239173,0.02345535162072983,0.026507626969122948,0.02943601104457419,0.029747037735278065,0.03275008385176159,0.034631852726783645,0.033899392612629455,0.03591039887239635,0.03370448168150098,0.03156018916157681,0.03086381077875665,0.030063230363296018,0.026959551331634746,0.026249063575887438,0.025980932641472807,0.025341238291485282,0.02422070199939698,0.02300606349094959,0.023128856944660787])
"""

# k = 1, b = 0.141739
# L=5 ... 10 x 30000
C_5 = np.array([4.487507912720007,4.47719974286263,4.474744096415302,4.373000124303805,4.209738246534194,4.031614052928785,3.863456774112222,3.646953706615715,3.3788914875188234,3.2478908045965915,3.001183158883836,2.713933656790445,2.51150151242587,2.302469016422084,2.064178727810868,1.9646249563002507,1.7334682224026363,1.6108882281112484,1.5330320974854037,1.4150079217599234,1.2822210914881929,1.204968289023973,1.108763683057477,1.0076828139242182,0.996864682413825,0.9019643026363923,0.8767622979093959,0.8087594152226236,0.754957659639769,0.7323619804847576])
C_5_s = np.array([0.028643712352293765,0.028158421064810382,0.028697073761395527,0.028337833674167184,0.02837801331427808,0.028418788639070814,0.028446002542206538,0.028368219372444572,0.027649531601508855,0.027905250780883656,0.02714592722550797,0.02572033690083807,0.025155390442900584,0.024313393771990554,0.023109747004402416,0.02252331746535087,0.02026458437952261,0.019737130269595712,0.019024110677132517,0.01807235661585413,0.016114404836758692,0.01569927819397456,0.01440644842974745,0.013130243421676563,0.013575758371700664,0.01187334146486957,0.012155534839411359,0.010799567384055898,0.009939520820452559,0.010036675053929854])

# L=7 ... 30 x 10000
C_7 = np.array([3.3719800765088963,3.759028417351202,3.9685585966475077,4.2771993225782134,4.66157280125084,4.931127532380106,5.344420508649675,5.426362681396404,5.476829945286283,5.278892868317927,4.814713992970418,4.547935320329955,4.144898928255987,3.7038469574832327,3.1804055307592694,2.7731595924641668,2.3539074705152636,2.1059977478905387,1.8241315719950948,1.5390212353377384,1.3998734543885474,1.2870544744930121,1.218861598378843,1.1141602053222115,1.0205849497056831,0.9105773281140116,0.8744129469051617,0.7869163964984274,0.7562435324186784,0.737940535909224])
C_7_s = np.array([0.05234781668324197,0.057284945563854224,0.06054509111262064,0.06135944511596287,0.06401549617510087,0.06318905320414338,0.06478028637637426,0.06270397617264101,0.06174569411556952,0.06133445081932843,0.05974759698470496,0.05995874832450261,0.0601847036418887,0.05788899676341981,0.051346652940777573,0.049174601855762445,0.044868844918781306,0.04172793261438959,0.0370573509568199,0.029654175018587126,0.029994769436807206,0.02690112766775612,0.024150911496475448,0.022892794846169105,0.022202285812408018,0.017470040554118695,0.01771978700954924,0.01523860467684092,0.015363793454237894,0.013726142886408735])

# L=10 ... 50 x 6000
C_10 = np.array([2.8978089699363014,3.041989162165712,3.1329690883013113,3.219750796417875,3.289397940559263,3.4934525688343867,3.6169014218605806,4.123652641195896,4.470648521796572,4.931128942400438,5.614154923901042,6.202618240831111,6.473164139224818,6.205580799338631,5.081945117984852,4.297456615611876,3.3131474900024376,2.6454836594884097,2.095466512079299,1.8526792296622285,1.5229231659655595,1.2941183770029396,1.2681615648528515,1.0798129084933756,0.9919705978334753,0.8960082797396991,0.8296114994579797,0.8077494418623091,0.7352682012882163,0.7098968726932124])
C_10_s = np.array([0.055819965468518314,0.05696463275410153,0.058565421024592425,0.05774375803680164,0.06137119092116911,0.06700017625459935,0.0690427909745492,0.0808335078079536,0.08744231531798408,0.09243853107387626,0.09816017658335911,0.09730465873241778,0.0967152167474395,0.09757551554070369,0.08880928204561553,0.08506321572733644,0.07543166799508003,0.06539466235018238,0.05181856717390557,0.04575942927408135,0.035710785668251775,0.02963782599361286,0.03141462043072878,0.02509534394195069,0.020912782682693237,0.020013223061820472,0.017555415574177925,0.01608401044984011,0.017298611307195032,0.014486888295786423])

T = np.flip(T)
C_5 = np.flip(C_5)
C_7 = np.flip(C_7)
C_10 = np.flip(C_10)

C_5_s = np.flip(C_5_s) * 3
C_7_s = np.flip(C_7_s) * 3
C_10_s = np.flip(C_10_s) * 3


L_C = np.zeros((len(L), len(C_5)))
for i in range(len(C_5)):
   L_C[0][i] = C_5[i] 
   L_C[1][i] = C_7[i]
   L_C[2][i] = C_10[i]

d_L_C = np.zeros((len(L), len(C_5)))
for i in range(len(C_5)):
   d_L_C[0][i] = C_5_s[i]
   d_L_C[1][i] = C_7_s[i]
   d_L_C[2][i] = C_10_s[i]

#C_reg = 0

C_reg = 9999
f_reg = 9999

C_reg_array = np.linspace(3.5,4.5,10000)
for C_0 in C_reg_array:
   scaled_data = fssa.scaledata(L, T, L_C + C_0, d_L_C, 1.31, 0.62997, 0.11008)
   f = fssa.quality(scaled_data.x, scaled_data.y, scaled_data.dy)

   if f < f_reg:
      C_reg = C_0
      f_reg = f
      print (C_reg, f_reg)


ret = fssa.autoscale(L, T, L_C + C_reg, d_L_C, 1.31, 0.63, 0.11)
print ("C_reg:", C_reg)
print ("rho:", ret.rho, ret.drho)
print ("nu:", ret.nu, ret.dnu)
print ("zeta:", ret.zeta, ret.dzeta)
print ("f:", ret.fun)

data = fssa.scaledata(L, T, L_C + C_reg, d_L_C, ret.rho, ret.nu, ret.zeta)
#data = fssa.scaledata(L, T, L_C + C_reg, d_L_C, 4.51, 0.63, 0.11)


heat_capacity = plt.figure()
plt.xlabel("T")
plt.ylabel("specific heat")
plt.title("3D LGT+matter model, K=1, B=0.142, specific heat")
plt.errorbar(T, C_5, yerr=C_5_s, fmt="o", color="red",      label="L = 5")
plt.errorbar(T, C_7, yerr=C_7_s, fmt="^", color="gold",     label="L = 7")
plt.errorbar(T, C_10, yerr=C_10_s, fmt="s", color="green",  label="L = 10")
plt.legend()
plt.show()
heat_capacity.savefig("3D_LGT_matter_B_0142_model_heat_capacity.png")


heat_capacity = plt.figure()
plt.xlabel("x")
plt.ylabel("scaled specific heat")
plt.title("3D LGT+matter model, K=1, B=0.142, specific heat, data collapse")
plt.errorbar(data.x[0], data.y[0], yerr=data.dy[0], fmt="o", color="red",    label="L = 5")
plt.errorbar(data.x[1], data.y[1], yerr=data.dy[1], fmt="^", color="gold",   label="L = 7")
plt.errorbar(data.x[2], data.y[2], yerr=data.dy[2], fmt="s", color="green",  label="L = 10")
plt.legend()
plt.show()
heat_capacity.savefig("3D_LGT_matter_B_0142_model_heat_capacity_scaled.png")


"""
fig, ax = plt.subplots()
ax.plot(
    data.x.T, data.y.T,
    '.',
)
plt.show()
"""



