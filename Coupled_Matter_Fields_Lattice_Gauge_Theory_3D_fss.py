from __future__ import division
import numpy as np
import fssa
import matplotlib.pyplot as plt

L = np.array([5, 10, 15])

#K = np.array([0.7,0.7034482758620689,0.7068965517241379,0.7103448275862069,0.7137931034482758,0.7172413793103448,0.7206896551724138,0.7241379310344828,0.7275862068965517,0.7310344827586207,0.7344827586206897,0.7379310344827587,0.7413793103448276,0.7448275862068966,0.7482758620689656,0.7517241379310344,0.7551724137931034,0.7586206896551724,0.7620689655172413,0.7655172413793103,0.7689655172413793,0.7724137931034483,0.7758620689655172,0.7793103448275862,0.7827586206896552,0.7862068965517242,0.7896551724137931,0.7931034482758621,0.7965517241379311,0.8])

K = np.array([0.2,0.2017241379310345,0.20344827586206898,0.20517241379310347,0.20689655172413793,0.20862068965517241,0.2103448275862069,0.2120689655172414,0.21379310344827587,0.21551724137931036,0.21724137931034485,0.2189655172413793,0.2206896551724138,0.22241379310344828,0.22413793103448276,0.22586206896551725,0.22758620689655173,0.22931034482758622,0.2310344827586207,0.23275862068965517,0.23448275862068965,0.23620689655172414,0.23793103448275862,0.2396551724137931,0.24137931034482757,0.24310344827586206,0.24482758620689654,0.24655172413793103,0.2482758620689655,0.25])

T = [1/k for k in K]

# B = 0.1
"""
# L=5 ... 20 x 15000
C_5 = np.array([2.1449771303735545,2.2091703920076826,2.179519308216175,2.1930011450170643,2.1480869428411076,2.0676291114914163,2.0066515529781483,1.9613116136714641,1.7987143780057009,1.7004763801886609,1.573369546222155,1.5238553494249698,1.372911430456181,1.2941268707267024,1.178875038945778,1.1227726636323088,1.0275843789196595,0.9239468779000544,0.8826879468905527,0.811216582824691,0.7538607277867925,0.7173349022593567,0.6548605796016934,0.6307391224001538,0.5803340482940882,0.5712792339441192,0.5382054462772206,0.4996575892294123,0.49366289574971617,0.45622990475081077])
C_5_s = np.array([0.01961050845049169,0.01996746852991644,0.019871572546570276,0.02029018861914262,0.020391469418501694,0.020628908297548994,0.021121077250177745,0.021519653152585142,0.02058321107811618,0.02063558096521039,0.019996989695345628,0.02020494543687208,0.019302132237894076,0.01938236650284259,0.018369497632642447,0.0183568222685209,0.017271266915575234,0.0157166772015064,0.015654217134064126,0.014977085649682082,0.01353022391590442,0.013128019249656737,0.012351089086820583,0.012033316262151277,0.011053909748362876,0.010780239434817226,0.01075235797203451,0.009471645408322063,0.00926723848582969,0.008547850209712365])

# L=10 ... 50 x 6000
C_10 = np.array([1.4630135544605698,1.4479786790304854,1.5461541046679956,1.6271155436150744,1.7105942788337725,1.828924628118498,1.9404734557054883,2.113126151814097,2.3406943641515805,2.6015191976503234,3.0531982739931567,3.362029663297215,3.538784294978458,3.4125719244584065,2.8477506293563923,2.5427528912108874,1.8285797566086253,1.5282762810016708,1.1431036641841212,1.031324726810092,0.892878287077152,0.8083128302606287,0.7632163879621308,0.6748663996111252,0.5998140812079001,0.5723401918311273,0.5310441046154186,0.4929030885783694,0.451672578416695,0.44351223858706057])
C_10_s = np.array([0.027054913222085343,0.026723589722165778,0.02805544645542608,0.03076508736472794,0.032486230534963814,0.03622774243682672,0.038789640539272856,0.04188510784993937,0.046457668320339665,0.04976608447437941,0.05379337171464701,0.05428250636965138,0.053028634016859005,0.05291670836311086,0.05061563754747659,0.05032542936173095,0.040614393538207526,0.03648739956663058,0.027912857213320545,0.025572745822419092,0.021863092233525533,0.021860335915121962,0.019340637774685705,0.015467568546165506,0.013518994705204016,0.012893125549221387,0.011337283048217626,0.011182458003679075,0.008721830312163541,0.009714156284880407])

# L=15 ... 100 x 3000
C_15 = np.array([1.402455515406215,1.4627320626797482,1.4921075998797497,1.5632205820423326,1.6278142564551723,1.749860752064943,1.8143209024958027,1.860438472547685,2.0282251843618724,2.018412971357558,2.2315146783840722,2.4855062488516917,2.723142409839313,3.136407585955448,3.8968690631594085,4.046836744763102,3.3140868318083863,1.9174745873368308,1.5026779080423815,1.0804127587776424,0.8400228841794031,0.7610119396802465,0.6978336171510665,0.6300112233645054,0.5950121434762077,0.5599425744349497,0.5255077842675716,0.493730140734785,0.47290412918267505,0.460737778153931])
C_15_s = np.array([0.03581673028418431,0.03794642335953005,0.03906762078936271,0.039153923509250295,0.04087184172501139,0.04453632765736803,0.04776047314171415,0.05042117359222419,0.05356827665071353,0.05192865288784092,0.05640604473979878,0.06927556634030549,0.07355188952225368,0.08635372040462226,0.09320305993020928,0.08998739501959253,0.08410734352019325,0.0612684112006906,0.050145105156254206,0.0342859777943916,0.02529158448244336,0.020777688496680276,0.01962871462273176,0.0177138368135627,0.016894176072774065,0.014578076843435381,0.014004018300883167,0.013691306306602688,0.01337832382307611,0.012697710136307163])
"""

# K = 1.15296
# L=5 ... 10 x 30000
C_5 = np.array([0.5687711339899495,0.5971078325888036,0.6265099122639863,0.6711391821920917,0.7021595405064578,0.7474950505070053,0.8088935464763333,0.8401991712784943,0.9026777853168281,0.9615755358255231,1.0085249428959528,1.0558637675171973,1.1297730733710727,1.1822188037571375,1.2386995786541055,1.2900708013079123,1.3191518195358425,1.3523492341482037,1.3799679537026468,1.4066423347790924,1.424196792179978,1.4270332532628156,1.4145560099895995,1.4393687488947575,1.413842246229124,1.4045642450931248,1.3717153037820273,1.356683031717685,1.309632203557934,1.3021857105508161])
C_5_s = np.array([0.005445338037245514,0.0058534212036671016,0.005988818261068812,0.006231012274511903,0.006548224449232509,0.006676650587633832,0.0070486597296382895,0.007138206889177299,0.007533916487745287,0.007889264759185366,0.007906262574560377,0.008115345768923189,0.008479015525313365,0.008669687407047892,0.008918366129916578,0.009014190043126938,0.00914704220886186,0.009265511667771594,0.00948001559681744,0.009652305454065951,0.009944788699901851,0.00998621004683772,0.010139842517940909,0.010407795820736646,0.010593907506617909,0.01069097534438121,0.010521510327134501,0.010678431879483195,0.010611425048141972,0.010585245606702319])

# L=10 ... 50 x 6000
#C_10 = np.array([])
#C_10_s = np.array([])

# L=15 ...
#C_15 = np.array([])
#C_15_s = np.array([])

T = np.flip(T)
C_5 = np.flip(C_5)
#C_10 = np.flip(C_10)
#C_15 = np.flip(C_15)

C_5_s = np.flip(C_5_s) * 3
#C_10_s = np.flip(C_10_s) * 3
#C_15_s = np.flip(C_15_s) * 3

"""
L_C = np.zeros((len(L), len(C_10)))
for i in range(len(C_10)):
   L_C[0][i] = C_5[i] 
   L_C[1][i] = C_10[i]
   L_C[2][i] = C_15[i]

d_L_C = np.zeros((len(L), len(C_10)))
for i in range(len(C_10)):
   d_L_C[0][i] = C_5_s[i]
   d_L_C[1][i] = C_10_s[i]
   d_L_C[2][i] = C_15_s[i]


C_reg = 9999
f_reg = 9999

C_reg_array = np.linspace(0,3,10000)
for C_0 in C_reg_array:
   scaled_data = fssa.scaledata(L, T, L_C + C_0, d_L_C, 1/0.2216, 0.62997, 0.11008)
   f = fssa.quality(scaled_data.x, scaled_data.y, scaled_data.dy)

   if f < f_reg:
      C_reg = C_0
      f_reg = f
      print (C_reg, f_reg)


ret = fssa.autoscale(L, T, L_C + C_reg, d_L_C, 4.51, 0.63, 0.11)
print ("C_reg:", C_reg)
print ("rho:", ret.rho, ret.drho)
print ("nu:", ret.nu, ret.dnu)
print ("zeta:", ret.zeta, ret.dzeta)
print ("f:", ret.fun)


data = fssa.scaledata(L, T, L_C + C_reg, d_L_C, ret.rho, ret.nu, ret.zeta)
#data = fssa.scaledata(L, T, L_C + C_reg, d_L_C, 4.51, 0.63, 0.11)
"""

heat_capacity = plt.figure()
plt.xlabel("1/K")
plt.ylabel("specific heat")
plt.title("3D LGT+matter model, K=1.15296, specific heat")
plt.errorbar(T, C_5, yerr=C_5_s, fmt="o", color="red",    label="L = 5")
#plt.errorbar(T, C_10, yerr=C_10_s, fmt="^", color="gold", label="L = 10")
#plt.errorbar(T, C_15, yerr=C_15_s, fmt="s", color="green",   label="L = 15")
plt.legend()
plt.show()
heat_capacity.savefig("3D_LGT_matter_K_1.15296_model_heat_capacity.png")

"""
heat_capacity = plt.figure()
plt.xlabel("x")
plt.ylabel("scaled specific heat")
plt.title("3D LGT+matter model, K=1.15296, specific heat, data collapse")
plt.errorbar(data.x[0], data.y[0], yerr=data.dy[0], fmt="o", color="red",      label="L = 5")
plt.errorbar(data.x[1], data.y[1], yerr=data.dy[1], fmt="^", color="gold",   label="L = 10")
plt.errorbar(data.x[2], data.y[2], yerr=data.dy[2], fmt="s", color="green",     label="L = 15")
plt.legend()
plt.show()
heat_capacity.savefig("3D_LGT_matter_K_1.15296_model_heat_capacity_scaled.png")
"""

"""
fig, ax = plt.subplots()
ax.plot(
    data.x.T, data.y.T,
    '.',
)
plt.show()
"""



